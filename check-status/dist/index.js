#!/usr/bin/env -S npx tsx
var o=process.env.SITE_URL??"",i=process.env.IS_WORDPRESS==="true",a=3,c=5e3,f="CheckStatus-Monitor/2.0",l=[{pattern:/error establishing a database connection/i,message:"Database connection error"},{pattern:/briefly unavailable for scheduled maintenance/i,message:"Maintenance mode detected"},{pattern:/fatal error/i,message:"WordPress fatal error"}];o||(console.error("\u274C SITE_URL not set"),process.exit(1));async function u(e){return new Promise(r=>setTimeout(r,e))}function d(e){return!!e&&typeof e=="object"&&"message"in e&&e.message&&typeof e.message=="string"}async function w(e){let r=c;for(let s=1;s<=a;s++)try{console.info(`Attempt ${s}/${a}...`);let t=await fetch(e,{headers:{"User-Agent":f}});if(!t.ok)throw new Error(`Website is down. HTTP status code: ${t.status}`);return t}catch(t){if(!d(t))throw new Error(`Unhandled Error: ${t}`);let{message:n}=t;if(n.includes("SSL")||n.includes("timeout")||n.includes("ETIMEDOUT"))console.warn(`\u26A0\uFE0F Transient error (${n}) \u2014 retrying in ${r/1e3}s`),await u(r),r*=2;else throw new Error(`Non-retryable error: ${n}`)}throw new Error(`Failed to fetch ${e} after ${a} retries`)}var E=async()=>{console.info(`Checking ${o}...`);let e=await w(o);if(i){console.info("Checking for WordPress-specific errors...");let r=await e.text();for(let{pattern:s,message:t}of l)if(s.test(r))throw new Error(t)}console.info(`\u2705 ${o} is up! (HTTP ${e.status})`)};E().catch(e=>{console.error(`\u274C ${e?.message}`)});
